Terminals unused in grammar

   COMILLA
   THEN


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: PROGRAMA $@1 bloque_declaraciones bloque_sentencias FIN_PROGRAMA

    3 $@2: /* vacío */

    4 bloque_declaraciones: DECLARACIONES $@2 declaraciones FIN_DECLARACIONES

    5 declaraciones: declaracion
    6              | declaraciones declaracion

    7 declaracion: DIM C_A lista_var C_C AS C_A lista_tipo C_C

    8 lista_var: ID

    9 $@3: /* vacío */

   10 lista_var: ID $@3 COMA lista_var

   11 tipo: ENTERO
   12     | REAL
   13     | CADENA

   14 lista_tipo: tipo

   15 $@4: /* vacío */

   16 lista_tipo: tipo $@4 COMA lista_tipo

   17 bloque_sentencias: sentencia
   18                  | bloque_sentencias sentencia

   19 sentencia: write
   20          | read
   21          | asignacion
   22          | sentencia_if
   23          | sentencia_while

   24 $@5: /* vacío */

   25 sentencia_if: IF P_A condicion P_C $@5 bloque_if ENDIF

   26 $@6: /* vacío */

   27 sentencia_while: WHILE P_A condicion P_C $@6 bloque_sentencias ENDWHILE

   28 bloque_if: bloque_sentencias

   29 $@7: /* vacío */

   30 bloque_if: bloque_sentencias $@7 ELSE bloque_sentencias

   31 $@8: /* vacío */

   32 comparacion: expresion COMPARADOR $@8 expresion

   33 condicion: allequal
   34          | comparacion
   35          | OP_NOT allequal
   36          | OP_NOT comparacion
   37          | allequal and_or allequal

   38 $@9: /* vacío */

   39 condicion: comparacion $@9 and_or comparacion

   40 $@10: /* vacío */

   41 comparacion_filter: GB COMPARADOR $@10 expresion

   42 condicion_filter: comparacion_filter
   43                 | OP_NOT GB comparacion_filter
   44                 | comparacion_filter and_or comparacion_filter

   45 lista_var_filter: ID
   46                 | lista_var_filter COMA ID

   47 $@11: /* vacío */

   48 allequal: $@11 ALLEQUAL P_A lista_exp P_C

   49 $@12: /* vacío */

   50 filter: FILTER P_A condicion_filter COMA $@12 C_A lista_var_filter C_C P_C

   51 $@13: /* vacío */

   52 write: WRITE $@13 CONST_CADENA
   53      | WRITE ID

   54 @14: /* vacío */

   55 read: READ @14 ID

   56 lista_exp: C_A expresiones C_C

   57 $@15: /* vacío */

   58 lista_exp: C_A expresiones C_C $@15 COMA lista_exp

   59 expresiones: expresion

   60 $@16: /* vacío */

   61 expresiones: expresion $@16 COMA expresiones

   62 and_or: AND
   63       | OR

   64 $@17: /* vacío */

   65 asignacion: ID $@17 ASIG expresion

   66 expresion: termino

   67 $@18: /* vacío */

   68 expresion: expresion OP_RESTA $@18 termino
   69          | expresion OP_SUMA termino
   70          | expresion OP_CONCAT termino

   71 termino: factor
   72        | termino OP_MUL factor
   73        | termino OP_DIV factor

   74 factor: ID
   75       | CONST_ENTERO
   76       | OP_RESTA CONST_ENTERO
   77       | CONST_REAL
   78       | OP_RESTA CONST_REAL
   79       | CONST_CADENA
   80       | P_A expresion P_C
   81       | filter


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 8 10 45 46 53 55 65 74
CADENA (259) 13
ENTERO (260) 11
REAL (261) 12
COMILLA (262)
COMA (263) 10 16 46 50 58 61
C_A (264) 7 50 56 58
C_C (265) 7 50 56 58
P_C (266) 25 27 48 50 80
P_A (267) 25 27 48 50 80
GB (268) 41 43
OP_CONCAT (269) 70
ASIG (270) 65
OP_DIV (271) 73
OP_MUL (272) 72
OP_RESTA (273) 68 76 78
OP_SUMA (274) 69
COMPARADOR (275) 32 41
AND (276) 62
OR (277) 63
OP_NOT (278) 35 36 43
CONST_REAL (279) 77 78
CONST_CADENA (280) 52 79
CONST_ENTERO (281) 75 76
PROGRAMA (282) 2
FIN_PROGRAMA (283) 2
DECLARACIONES (284) 4
FIN_DECLARACIONES (285) 4
DIM (286) 7
AS (287) 7
IF (288) 25
ELSE (289) 30
THEN (290)
ENDIF (291) 25
WHILE (292) 27
ENDWHILE (293) 27
ALLEQUAL (294) 48
WRITE (295) 52 53
READ (296) 55
FILTER (297) 50


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
programa (44)
    en la izquierda: 2, en la derecha: 0
$@1 (45)
    en la izquierda: 1, en la derecha: 2
bloque_declaraciones (46)
    en la izquierda: 4, en la derecha: 2
$@2 (47)
    en la izquierda: 3, en la derecha: 4
declaraciones (48)
    en la izquierda: 5 6, en la derecha: 4 6
declaracion (49)
    en la izquierda: 7, en la derecha: 5 6
lista_var (50)
    en la izquierda: 8 10, en la derecha: 7 10
$@3 (51)
    en la izquierda: 9, en la derecha: 10
tipo (52)
    en la izquierda: 11 12 13, en la derecha: 14 16
lista_tipo (53)
    en la izquierda: 14 16, en la derecha: 7 16
$@4 (54)
    en la izquierda: 15, en la derecha: 16
bloque_sentencias (55)
    en la izquierda: 17 18, en la derecha: 2 18 27 28 30
sentencia (56)
    en la izquierda: 19 20 21 22 23, en la derecha: 17 18
sentencia_if (57)
    en la izquierda: 25, en la derecha: 22
$@5 (58)
    en la izquierda: 24, en la derecha: 25
sentencia_while (59)
    en la izquierda: 27, en la derecha: 23
$@6 (60)
    en la izquierda: 26, en la derecha: 27
bloque_if (61)
    en la izquierda: 28 30, en la derecha: 25
$@7 (62)
    en la izquierda: 29, en la derecha: 30
comparacion (63)
    en la izquierda: 32, en la derecha: 34 36 39
$@8 (64)
    en la izquierda: 31, en la derecha: 32
condicion (65)
    en la izquierda: 33 34 35 36 37 39, en la derecha: 25 27
$@9 (66)
    en la izquierda: 38, en la derecha: 39
comparacion_filter (67)
    en la izquierda: 41, en la derecha: 42 43 44
$@10 (68)
    en la izquierda: 40, en la derecha: 41
condicion_filter (69)
    en la izquierda: 42 43 44, en la derecha: 50
lista_var_filter (70)
    en la izquierda: 45 46, en la derecha: 46 50
allequal (71)
    en la izquierda: 48, en la derecha: 33 35 37
$@11 (72)
    en la izquierda: 47, en la derecha: 48
filter (73)
    en la izquierda: 50, en la derecha: 81
$@12 (74)
    en la izquierda: 49, en la derecha: 50
write (75)
    en la izquierda: 52 53, en la derecha: 19
$@13 (76)
    en la izquierda: 51, en la derecha: 52
read (77)
    en la izquierda: 55, en la derecha: 20
@14 (78)
    en la izquierda: 54, en la derecha: 55
lista_exp (79)
    en la izquierda: 56 58, en la derecha: 48 58
$@15 (80)
    en la izquierda: 57, en la derecha: 58
expresiones (81)
    en la izquierda: 59 61, en la derecha: 56 58 61
$@16 (82)
    en la izquierda: 60, en la derecha: 61
and_or (83)
    en la izquierda: 62 63, en la derecha: 37 39 44
asignacion (84)
    en la izquierda: 65, en la derecha: 21
$@17 (85)
    en la izquierda: 64, en la derecha: 65
expresion (86)
    en la izquierda: 66 68 69 70, en la derecha: 32 41 59 61 65 68
    69 70 80
$@18 (87)
    en la izquierda: 67, en la derecha: 68
termino (88)
    en la izquierda: 71 72 73, en la derecha: 66 68 69 70 72 73
factor (89)
    en la izquierda: 74 75 76 77 78 79 80 81, en la derecha: 71 72
    73


estado 0

    0 $accept: . programa $end

    PROGRAMA  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    2 programa: PROGRAMA . $@1 bloque_declaraciones bloque_sentencias FIN_PROGRAMA

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 3


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


estado 3

    2 programa: PROGRAMA $@1 . bloque_declaraciones bloque_sentencias FIN_PROGRAMA

    DECLARACIONES  desplazar e ir al estado 5

    bloque_declaraciones  ir al estado 6


estado 4

    0 $accept: programa $end .

    $default  aceptar


estado 5

    4 bloque_declaraciones: DECLARACIONES . $@2 declaraciones FIN_DECLARACIONES

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 7


estado 6

    2 programa: PROGRAMA $@1 bloque_declaraciones . bloque_sentencias FIN_PROGRAMA

    ID     desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12

    bloque_sentencias  ir al estado 13
    sentencia          ir al estado 14
    sentencia_if       ir al estado 15
    sentencia_while    ir al estado 16
    write              ir al estado 17
    read               ir al estado 18
    asignacion         ir al estado 19


estado 7

    4 bloque_declaraciones: DECLARACIONES $@2 . declaraciones FIN_DECLARACIONES

    DIM  desplazar e ir al estado 20

    declaraciones  ir al estado 21
    declaracion    ir al estado 22


estado 8

   65 asignacion: ID . $@17 ASIG expresion

    $default  reduce usando la regla 64 ($@17)

    $@17  ir al estado 23


estado 9

   25 sentencia_if: IF . P_A condicion P_C $@5 bloque_if ENDIF

    P_A  desplazar e ir al estado 24


estado 10

   27 sentencia_while: WHILE . P_A condicion P_C $@6 bloque_sentencias ENDWHILE

    P_A  desplazar e ir al estado 25


estado 11

   52 write: WRITE . $@13 CONST_CADENA
   53      | WRITE . ID

    ID  desplazar e ir al estado 26

    $default  reduce usando la regla 51 ($@13)

    $@13  ir al estado 27


estado 12

   55 read: READ . @14 ID

    $default  reduce usando la regla 54 (@14)

    @14  ir al estado 28


estado 13

    2 programa: PROGRAMA $@1 bloque_declaraciones bloque_sentencias . FIN_PROGRAMA
   18 bloque_sentencias: bloque_sentencias . sentencia

    ID            desplazar e ir al estado 8
    FIN_PROGRAMA  desplazar e ir al estado 29
    IF            desplazar e ir al estado 9
    WHILE         desplazar e ir al estado 10
    WRITE         desplazar e ir al estado 11
    READ          desplazar e ir al estado 12

    sentencia        ir al estado 30
    sentencia_if     ir al estado 15
    sentencia_while  ir al estado 16
    write            ir al estado 17
    read             ir al estado 18
    asignacion       ir al estado 19


estado 14

   17 bloque_sentencias: sentencia .

    $default  reduce usando la regla 17 (bloque_sentencias)


estado 15

   22 sentencia: sentencia_if .

    $default  reduce usando la regla 22 (sentencia)


estado 16

   23 sentencia: sentencia_while .

    $default  reduce usando la regla 23 (sentencia)


estado 17

   19 sentencia: write .

    $default  reduce usando la regla 19 (sentencia)


estado 18

   20 sentencia: read .

    $default  reduce usando la regla 20 (sentencia)


estado 19

   21 sentencia: asignacion .

    $default  reduce usando la regla 21 (sentencia)


estado 20

    7 declaracion: DIM . C_A lista_var C_C AS C_A lista_tipo C_C

    C_A  desplazar e ir al estado 31


estado 21

    4 bloque_declaraciones: DECLARACIONES $@2 declaraciones . FIN_DECLARACIONES
    6 declaraciones: declaraciones . declaracion

    FIN_DECLARACIONES  desplazar e ir al estado 32
    DIM                desplazar e ir al estado 20

    declaracion  ir al estado 33


estado 22

    5 declaraciones: declaracion .

    $default  reduce usando la regla 5 (declaraciones)


estado 23

   65 asignacion: ID $@17 . ASIG expresion

    ASIG  desplazar e ir al estado 34


estado 24

   25 sentencia_if: IF P_A . condicion P_C $@5 bloque_if ENDIF

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    OP_NOT        desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    $default  reduce usando la regla 47 ($@11)

    comparacion  ir al estado 43
    condicion    ir al estado 44
    allequal     ir al estado 45
    $@11         ir al estado 46
    filter       ir al estado 47
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 25

   27 sentencia_while: WHILE P_A . condicion P_C $@6 bloque_sentencias ENDWHILE

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    OP_NOT        desplazar e ir al estado 38
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    $default  reduce usando la regla 47 ($@11)

    comparacion  ir al estado 43
    condicion    ir al estado 51
    allequal     ir al estado 45
    $@11         ir al estado 46
    filter       ir al estado 47
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 26

   53 write: WRITE ID .

    $default  reduce usando la regla 53 (write)


estado 27

   52 write: WRITE $@13 . CONST_CADENA

    CONST_CADENA  desplazar e ir al estado 52


estado 28

   55 read: READ @14 . ID

    ID  desplazar e ir al estado 53


estado 29

    2 programa: PROGRAMA $@1 bloque_declaraciones bloque_sentencias FIN_PROGRAMA .

    $default  reduce usando la regla 2 (programa)


estado 30

   18 bloque_sentencias: bloque_sentencias sentencia .

    $default  reduce usando la regla 18 (bloque_sentencias)


estado 31

    7 declaracion: DIM C_A . lista_var C_C AS C_A lista_tipo C_C

    ID  desplazar e ir al estado 54

    lista_var  ir al estado 55


estado 32

    4 bloque_declaraciones: DECLARACIONES $@2 declaraciones FIN_DECLARACIONES .

    $default  reduce usando la regla 4 (bloque_declaraciones)


estado 33

    6 declaraciones: declaraciones declaracion .

    $default  reduce usando la regla 6 (declaraciones)


estado 34

   65 asignacion: ID $@17 ASIG . expresion

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter     ir al estado 47
    expresion  ir al estado 56
    termino    ir al estado 49
    factor     ir al estado 50


estado 35

   74 factor: ID .

    $default  reduce usando la regla 74 (factor)


estado 36

   80 factor: P_A . expresion P_C

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter     ir al estado 47
    expresion  ir al estado 57
    termino    ir al estado 49
    factor     ir al estado 50


estado 37

   76 factor: OP_RESTA . CONST_ENTERO
   78       | OP_RESTA . CONST_REAL

    CONST_REAL    desplazar e ir al estado 58
    CONST_ENTERO  desplazar e ir al estado 59


estado 38

   35 condicion: OP_NOT . allequal
   36          | OP_NOT . comparacion

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    $default  reduce usando la regla 47 ($@11)

    comparacion  ir al estado 60
    allequal     ir al estado 61
    $@11         ir al estado 46
    filter       ir al estado 47
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 39

   77 factor: CONST_REAL .

    $default  reduce usando la regla 77 (factor)


estado 40

   79 factor: CONST_CADENA .

    $default  reduce usando la regla 79 (factor)


estado 41

   75 factor: CONST_ENTERO .

    $default  reduce usando la regla 75 (factor)


estado 42

   50 filter: FILTER . P_A condicion_filter COMA $@12 C_A lista_var_filter C_C P_C

    P_A  desplazar e ir al estado 62


estado 43

   34 condicion: comparacion .
   39          | comparacion . $@9 and_or comparacion

    P_C       reduce usando la regla 34 (condicion)
    $default  reduce usando la regla 38 ($@9)

    $@9  ir al estado 63


estado 44

   25 sentencia_if: IF P_A condicion . P_C $@5 bloque_if ENDIF

    P_C  desplazar e ir al estado 64


estado 45

   33 condicion: allequal .
   37          | allequal . and_or allequal

    AND  desplazar e ir al estado 65
    OR   desplazar e ir al estado 66

    $default  reduce usando la regla 33 (condicion)

    and_or  ir al estado 67


estado 46

   48 allequal: $@11 . ALLEQUAL P_A lista_exp P_C

    ALLEQUAL  desplazar e ir al estado 68


estado 47

   81 factor: filter .

    $default  reduce usando la regla 81 (factor)


estado 48

   32 comparacion: expresion . COMPARADOR $@8 expresion
   68 expresion: expresion . OP_RESTA $@18 termino
   69          | expresion . OP_SUMA termino
   70          | expresion . OP_CONCAT termino

    OP_CONCAT   desplazar e ir al estado 69
    OP_RESTA    desplazar e ir al estado 70
    OP_SUMA     desplazar e ir al estado 71
    COMPARADOR  desplazar e ir al estado 72


estado 49

   66 expresion: termino .
   72 termino: termino . OP_MUL factor
   73        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 73
    OP_MUL  desplazar e ir al estado 74

    $default  reduce usando la regla 66 (expresion)


estado 50

   71 termino: factor .

    $default  reduce usando la regla 71 (termino)


estado 51

   27 sentencia_while: WHILE P_A condicion . P_C $@6 bloque_sentencias ENDWHILE

    P_C  desplazar e ir al estado 75


estado 52

   52 write: WRITE $@13 CONST_CADENA .

    $default  reduce usando la regla 52 (write)


estado 53

   55 read: READ @14 ID .

    $default  reduce usando la regla 55 (read)


estado 54

    8 lista_var: ID .
   10          | ID . $@3 COMA lista_var

    COMA      reduce usando la regla 9 ($@3)
    $default  reduce usando la regla 8 (lista_var)

    $@3  ir al estado 76


estado 55

    7 declaracion: DIM C_A lista_var . C_C AS C_A lista_tipo C_C

    C_C  desplazar e ir al estado 77


estado 56

   65 asignacion: ID $@17 ASIG expresion .
   68 expresion: expresion . OP_RESTA $@18 termino
   69          | expresion . OP_SUMA termino
   70          | expresion . OP_CONCAT termino

    OP_CONCAT  desplazar e ir al estado 69
    OP_RESTA   desplazar e ir al estado 70
    OP_SUMA    desplazar e ir al estado 71

    $default  reduce usando la regla 65 (asignacion)


estado 57

   68 expresion: expresion . OP_RESTA $@18 termino
   69          | expresion . OP_SUMA termino
   70          | expresion . OP_CONCAT termino
   80 factor: P_A expresion . P_C

    P_C        desplazar e ir al estado 78
    OP_CONCAT  desplazar e ir al estado 69
    OP_RESTA   desplazar e ir al estado 70
    OP_SUMA    desplazar e ir al estado 71


estado 58

   78 factor: OP_RESTA CONST_REAL .

    $default  reduce usando la regla 78 (factor)


estado 59

   76 factor: OP_RESTA CONST_ENTERO .

    $default  reduce usando la regla 76 (factor)


estado 60

   36 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 36 (condicion)


estado 61

   35 condicion: OP_NOT allequal .

    $default  reduce usando la regla 35 (condicion)


estado 62

   50 filter: FILTER P_A . condicion_filter COMA $@12 C_A lista_var_filter C_C P_C

    GB      desplazar e ir al estado 79
    OP_NOT  desplazar e ir al estado 80

    comparacion_filter  ir al estado 81
    condicion_filter    ir al estado 82


estado 63

   39 condicion: comparacion $@9 . and_or comparacion

    AND  desplazar e ir al estado 65
    OR   desplazar e ir al estado 66

    and_or  ir al estado 83


estado 64

   25 sentencia_if: IF P_A condicion P_C . $@5 bloque_if ENDIF

    $default  reduce usando la regla 24 ($@5)

    $@5  ir al estado 84


estado 65

   62 and_or: AND .

    $default  reduce usando la regla 62 (and_or)


estado 66

   63 and_or: OR .

    $default  reduce usando la regla 63 (and_or)


estado 67

   37 condicion: allequal and_or . allequal

    $default  reduce usando la regla 47 ($@11)

    allequal  ir al estado 85
    $@11      ir al estado 46


estado 68

   48 allequal: $@11 ALLEQUAL . P_A lista_exp P_C

    P_A  desplazar e ir al estado 86


estado 69

   70 expresion: expresion OP_CONCAT . termino

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter   ir al estado 47
    termino  ir al estado 87
    factor   ir al estado 50


estado 70

   68 expresion: expresion OP_RESTA . $@18 termino

    $default  reduce usando la regla 67 ($@18)

    $@18  ir al estado 88


estado 71

   69 expresion: expresion OP_SUMA . termino

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter   ir al estado 47
    termino  ir al estado 89
    factor   ir al estado 50


estado 72

   32 comparacion: expresion COMPARADOR . $@8 expresion

    $default  reduce usando la regla 31 ($@8)

    $@8  ir al estado 90


estado 73

   73 termino: termino OP_DIV . factor

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter  ir al estado 47
    factor  ir al estado 91


estado 74

   72 termino: termino OP_MUL . factor

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter  ir al estado 47
    factor  ir al estado 92


estado 75

   27 sentencia_while: WHILE P_A condicion P_C . $@6 bloque_sentencias ENDWHILE

    $default  reduce usando la regla 26 ($@6)

    $@6  ir al estado 93


estado 76

   10 lista_var: ID $@3 . COMA lista_var

    COMA  desplazar e ir al estado 94


estado 77

    7 declaracion: DIM C_A lista_var C_C . AS C_A lista_tipo C_C

    AS  desplazar e ir al estado 95


estado 78

   80 factor: P_A expresion P_C .

    $default  reduce usando la regla 80 (factor)


estado 79

   41 comparacion_filter: GB . COMPARADOR $@10 expresion

    COMPARADOR  desplazar e ir al estado 96


estado 80

   43 condicion_filter: OP_NOT . GB comparacion_filter

    GB  desplazar e ir al estado 97


estado 81

   42 condicion_filter: comparacion_filter .
   44                 | comparacion_filter . and_or comparacion_filter

    AND  desplazar e ir al estado 65
    OR   desplazar e ir al estado 66

    $default  reduce usando la regla 42 (condicion_filter)

    and_or  ir al estado 98


estado 82

   50 filter: FILTER P_A condicion_filter . COMA $@12 C_A lista_var_filter C_C P_C

    COMA  desplazar e ir al estado 99


estado 83

   39 condicion: comparacion $@9 and_or . comparacion

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    comparacion  ir al estado 100
    filter       ir al estado 47
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 84

   25 sentencia_if: IF P_A condicion P_C $@5 . bloque_if ENDIF

    ID     desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12

    bloque_sentencias  ir al estado 101
    sentencia          ir al estado 14
    sentencia_if       ir al estado 15
    sentencia_while    ir al estado 16
    bloque_if          ir al estado 102
    write              ir al estado 17
    read               ir al estado 18
    asignacion         ir al estado 19


estado 85

   37 condicion: allequal and_or allequal .

    $default  reduce usando la regla 37 (condicion)


estado 86

   48 allequal: $@11 ALLEQUAL P_A . lista_exp P_C

    C_A  desplazar e ir al estado 103

    lista_exp  ir al estado 104


estado 87

   70 expresion: expresion OP_CONCAT termino .
   72 termino: termino . OP_MUL factor
   73        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 73
    OP_MUL  desplazar e ir al estado 74

    $default  reduce usando la regla 70 (expresion)


estado 88

   68 expresion: expresion OP_RESTA $@18 . termino

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter   ir al estado 47
    termino  ir al estado 105
    factor   ir al estado 50


estado 89

   69 expresion: expresion OP_SUMA termino .
   72 termino: termino . OP_MUL factor
   73        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 73
    OP_MUL  desplazar e ir al estado 74

    $default  reduce usando la regla 69 (expresion)


estado 90

   32 comparacion: expresion COMPARADOR $@8 . expresion

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter     ir al estado 47
    expresion  ir al estado 106
    termino    ir al estado 49
    factor     ir al estado 50


estado 91

   73 termino: termino OP_DIV factor .

    $default  reduce usando la regla 73 (termino)


estado 92

   72 termino: termino OP_MUL factor .

    $default  reduce usando la regla 72 (termino)


estado 93

   27 sentencia_while: WHILE P_A condicion P_C $@6 . bloque_sentencias ENDWHILE

    ID     desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12

    bloque_sentencias  ir al estado 107
    sentencia          ir al estado 14
    sentencia_if       ir al estado 15
    sentencia_while    ir al estado 16
    write              ir al estado 17
    read               ir al estado 18
    asignacion         ir al estado 19


estado 94

   10 lista_var: ID $@3 COMA . lista_var

    ID  desplazar e ir al estado 54

    lista_var  ir al estado 108


estado 95

    7 declaracion: DIM C_A lista_var C_C AS . C_A lista_tipo C_C

    C_A  desplazar e ir al estado 109


estado 96

   41 comparacion_filter: GB COMPARADOR . $@10 expresion

    $default  reduce usando la regla 40 ($@10)

    $@10  ir al estado 110


estado 97

   43 condicion_filter: OP_NOT GB . comparacion_filter

    GB  desplazar e ir al estado 79

    comparacion_filter  ir al estado 111


estado 98

   44 condicion_filter: comparacion_filter and_or . comparacion_filter

    GB  desplazar e ir al estado 79

    comparacion_filter  ir al estado 112


estado 99

   50 filter: FILTER P_A condicion_filter COMA . $@12 C_A lista_var_filter C_C P_C

    $default  reduce usando la regla 49 ($@12)

    $@12  ir al estado 113


estado 100

   39 condicion: comparacion $@9 and_or comparacion .

    $default  reduce usando la regla 39 (condicion)


estado 101

   18 bloque_sentencias: bloque_sentencias . sentencia
   28 bloque_if: bloque_sentencias .
   30          | bloque_sentencias . $@7 ELSE bloque_sentencias

    ID     desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12

    ELSE      reduce usando la regla 29 ($@7)
    $default  reduce usando la regla 28 (bloque_if)

    sentencia        ir al estado 30
    sentencia_if     ir al estado 15
    sentencia_while  ir al estado 16
    $@7              ir al estado 114
    write            ir al estado 17
    read             ir al estado 18
    asignacion       ir al estado 19


estado 102

   25 sentencia_if: IF P_A condicion P_C $@5 bloque_if . ENDIF

    ENDIF  desplazar e ir al estado 115


estado 103

   56 lista_exp: C_A . expresiones C_C
   58          | C_A . expresiones C_C $@15 COMA lista_exp

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter       ir al estado 47
    expresiones  ir al estado 116
    expresion    ir al estado 117
    termino      ir al estado 49
    factor       ir al estado 50


estado 104

   48 allequal: $@11 ALLEQUAL P_A lista_exp . P_C

    P_C  desplazar e ir al estado 118


estado 105

   68 expresion: expresion OP_RESTA $@18 termino .
   72 termino: termino . OP_MUL factor
   73        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 73
    OP_MUL  desplazar e ir al estado 74

    $default  reduce usando la regla 68 (expresion)


estado 106

   32 comparacion: expresion COMPARADOR $@8 expresion .
   68 expresion: expresion . OP_RESTA $@18 termino
   69          | expresion . OP_SUMA termino
   70          | expresion . OP_CONCAT termino

    OP_CONCAT  desplazar e ir al estado 69
    OP_RESTA   desplazar e ir al estado 70
    OP_SUMA    desplazar e ir al estado 71

    $default  reduce usando la regla 32 (comparacion)


estado 107

   18 bloque_sentencias: bloque_sentencias . sentencia
   27 sentencia_while: WHILE P_A condicion P_C $@6 bloque_sentencias . ENDWHILE

    ID        desplazar e ir al estado 8
    IF        desplazar e ir al estado 9
    WHILE     desplazar e ir al estado 10
    ENDWHILE  desplazar e ir al estado 119
    WRITE     desplazar e ir al estado 11
    READ      desplazar e ir al estado 12

    sentencia        ir al estado 30
    sentencia_if     ir al estado 15
    sentencia_while  ir al estado 16
    write            ir al estado 17
    read             ir al estado 18
    asignacion       ir al estado 19


estado 108

   10 lista_var: ID $@3 COMA lista_var .

    $default  reduce usando la regla 10 (lista_var)


estado 109

    7 declaracion: DIM C_A lista_var C_C AS C_A . lista_tipo C_C

    CADENA  desplazar e ir al estado 120
    ENTERO  desplazar e ir al estado 121
    REAL    desplazar e ir al estado 122

    tipo        ir al estado 123
    lista_tipo  ir al estado 124


estado 110

   41 comparacion_filter: GB COMPARADOR $@10 . expresion

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter     ir al estado 47
    expresion  ir al estado 125
    termino    ir al estado 49
    factor     ir al estado 50


estado 111

   43 condicion_filter: OP_NOT GB comparacion_filter .

    $default  reduce usando la regla 43 (condicion_filter)


estado 112

   44 condicion_filter: comparacion_filter and_or comparacion_filter .

    $default  reduce usando la regla 44 (condicion_filter)


estado 113

   50 filter: FILTER P_A condicion_filter COMA $@12 . C_A lista_var_filter C_C P_C

    C_A  desplazar e ir al estado 126


estado 114

   30 bloque_if: bloque_sentencias $@7 . ELSE bloque_sentencias

    ELSE  desplazar e ir al estado 127


estado 115

   25 sentencia_if: IF P_A condicion P_C $@5 bloque_if ENDIF .

    $default  reduce usando la regla 25 (sentencia_if)


estado 116

   56 lista_exp: C_A expresiones . C_C
   58          | C_A expresiones . C_C $@15 COMA lista_exp

    C_C  desplazar e ir al estado 128


estado 117

   59 expresiones: expresion .
   61            | expresion . $@16 COMA expresiones
   68 expresion: expresion . OP_RESTA $@18 termino
   69          | expresion . OP_SUMA termino
   70          | expresion . OP_CONCAT termino

    OP_CONCAT  desplazar e ir al estado 69
    OP_RESTA   desplazar e ir al estado 70
    OP_SUMA    desplazar e ir al estado 71

    COMA      reduce usando la regla 60 ($@16)
    $default  reduce usando la regla 59 (expresiones)

    $@16  ir al estado 129


estado 118

   48 allequal: $@11 ALLEQUAL P_A lista_exp P_C .

    $default  reduce usando la regla 48 (allequal)


estado 119

   27 sentencia_while: WHILE P_A condicion P_C $@6 bloque_sentencias ENDWHILE .

    $default  reduce usando la regla 27 (sentencia_while)


estado 120

   13 tipo: CADENA .

    $default  reduce usando la regla 13 (tipo)


estado 121

   11 tipo: ENTERO .

    $default  reduce usando la regla 11 (tipo)


estado 122

   12 tipo: REAL .

    $default  reduce usando la regla 12 (tipo)


estado 123

   14 lista_tipo: tipo .
   16           | tipo . $@4 COMA lista_tipo

    COMA      reduce usando la regla 15 ($@4)
    $default  reduce usando la regla 14 (lista_tipo)

    $@4  ir al estado 130


estado 124

    7 declaracion: DIM C_A lista_var C_C AS C_A lista_tipo . C_C

    C_C  desplazar e ir al estado 131


estado 125

   41 comparacion_filter: GB COMPARADOR $@10 expresion .
   68 expresion: expresion . OP_RESTA $@18 termino
   69          | expresion . OP_SUMA termino
   70          | expresion . OP_CONCAT termino

    OP_CONCAT  desplazar e ir al estado 69
    OP_RESTA   desplazar e ir al estado 70
    OP_SUMA    desplazar e ir al estado 71

    $default  reduce usando la regla 41 (comparacion_filter)


estado 126

   50 filter: FILTER P_A condicion_filter COMA $@12 C_A . lista_var_filter C_C P_C

    ID  desplazar e ir al estado 132

    lista_var_filter  ir al estado 133


estado 127

   30 bloque_if: bloque_sentencias $@7 ELSE . bloque_sentencias

    ID     desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12

    bloque_sentencias  ir al estado 134
    sentencia          ir al estado 14
    sentencia_if       ir al estado 15
    sentencia_while    ir al estado 16
    write              ir al estado 17
    read               ir al estado 18
    asignacion         ir al estado 19


estado 128

   56 lista_exp: C_A expresiones C_C .
   58          | C_A expresiones C_C . $@15 COMA lista_exp

    COMA      reduce usando la regla 57 ($@15)
    $default  reduce usando la regla 56 (lista_exp)

    $@15  ir al estado 135


estado 129

   61 expresiones: expresion $@16 . COMA expresiones

    COMA  desplazar e ir al estado 136


estado 130

   16 lista_tipo: tipo $@4 . COMA lista_tipo

    COMA  desplazar e ir al estado 137


estado 131

    7 declaracion: DIM C_A lista_var C_C AS C_A lista_tipo C_C .

    $default  reduce usando la regla 7 (declaracion)


estado 132

   45 lista_var_filter: ID .

    $default  reduce usando la regla 45 (lista_var_filter)


estado 133

   46 lista_var_filter: lista_var_filter . COMA ID
   50 filter: FILTER P_A condicion_filter COMA $@12 C_A lista_var_filter . C_C P_C

    COMA  desplazar e ir al estado 138
    C_C   desplazar e ir al estado 139


estado 134

   18 bloque_sentencias: bloque_sentencias . sentencia
   30 bloque_if: bloque_sentencias $@7 ELSE bloque_sentencias .

    ID     desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12

    $default  reduce usando la regla 30 (bloque_if)

    sentencia        ir al estado 30
    sentencia_if     ir al estado 15
    sentencia_while  ir al estado 16
    write            ir al estado 17
    read             ir al estado 18
    asignacion       ir al estado 19


estado 135

   58 lista_exp: C_A expresiones C_C $@15 . COMA lista_exp

    COMA  desplazar e ir al estado 140


estado 136

   61 expresiones: expresion $@16 COMA . expresiones

    ID            desplazar e ir al estado 35
    P_A           desplazar e ir al estado 36
    OP_RESTA      desplazar e ir al estado 37
    CONST_REAL    desplazar e ir al estado 39
    CONST_CADENA  desplazar e ir al estado 40
    CONST_ENTERO  desplazar e ir al estado 41
    FILTER        desplazar e ir al estado 42

    filter       ir al estado 47
    expresiones  ir al estado 141
    expresion    ir al estado 117
    termino      ir al estado 49
    factor       ir al estado 50


estado 137

   16 lista_tipo: tipo $@4 COMA . lista_tipo

    CADENA  desplazar e ir al estado 120
    ENTERO  desplazar e ir al estado 121
    REAL    desplazar e ir al estado 122

    tipo        ir al estado 123
    lista_tipo  ir al estado 142


estado 138

   46 lista_var_filter: lista_var_filter COMA . ID

    ID  desplazar e ir al estado 143


estado 139

   50 filter: FILTER P_A condicion_filter COMA $@12 C_A lista_var_filter C_C . P_C

    P_C  desplazar e ir al estado 144


estado 140

   58 lista_exp: C_A expresiones C_C $@15 COMA . lista_exp

    C_A  desplazar e ir al estado 103

    lista_exp  ir al estado 145


estado 141

   61 expresiones: expresion $@16 COMA expresiones .

    $default  reduce usando la regla 61 (expresiones)


estado 142

   16 lista_tipo: tipo $@4 COMA lista_tipo .

    $default  reduce usando la regla 16 (lista_tipo)


estado 143

   46 lista_var_filter: lista_var_filter COMA ID .

    $default  reduce usando la regla 46 (lista_var_filter)


estado 144

   50 filter: FILTER P_A condicion_filter COMA $@12 C_A lista_var_filter C_C P_C .

    $default  reduce usando la regla 50 (filter)


estado 145

   58 lista_exp: C_A expresiones C_C $@15 COMA lista_exp .

    $default  reduce usando la regla 58 (lista_exp)
