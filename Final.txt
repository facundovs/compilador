include macros2.asm
include number.asm

.MODEL LARGE
.STACK 200h
.386
.387
.DATA

	MAXTEXTSIZE equ 50
	@true dd 1.0
	@false dd 0.0
	@a 	DD 0.0
	@b 	DD 0.0
	@c 	DB MAXTEXTSIZE dup (?),'$'
	@d 	DB MAXTEXTSIZE dup (?),'$'
	@e 	DD 0.0
	@_5 	DD 5.0
	@_6 	DD 6.0
	@_Inicio_del_programa 	DB "Inicio del programa",'$',31 dup(?)
	@_0 	DD 0.0
	@_1 	DD 1.0
	@_7 	DD 7.0
	@_Fin_del_programa 	DB "Fin del programa",'$',34 dup(?)
	@Aux1 	DD 0.0
	@Aux2 	DD 0.0
	@Aux3 	DD 0.0
	@Aux4 	DD 0.0
	@@filter 	DD 0.0
	@@allequal 	DD 0.0
	@null 	DD -1.0

.CODE
.startup
	mov AX,@DATA
	mov DS,AX

	FINIT

	fld 	@_5
	fstp 	@a
	fld 	@_6
	fstp 	@b
	displayString 	@_Inicio_del_programa
	newLine 1
while_1:
cond_while_1_1:
	fld 	@_0
	fld 	@a
	fcomp
	fstsw	ax
	fwait
	sahf
	ja		true_while_1
cond_while_1_2:
	fld 	@_0
	fld 	@b
	fcomp
	fstsw	ax
	fwait
	sahf
	jbe		end_while_1
true_while_1:
	fld 	@a
	fld 	@_1
	fsub
	fstp 	@Aux1
	fld 	@Aux1
	fstp 	@a
	fld 	@b
	fld 	@_1
	fsub
	fstp 	@Aux2
	fld 	@Aux2
	fstp 	@b
	jmp cond_while_1_1
end_while_1:
	displayFloat 	@a,3
	newLine 1
	displayFloat 	@b,3
	newLine 1
while_2:
cond_while_2_1:
	fld 	@_5
	fld 	@a
	fcomp
	fstsw	ax
	fwait
	sahf
	jne		true_while_2
cond_while_2_2:
	fld 	@_7
	fld 	@b
	fcomp
	fstsw	ax
	fwait
	sahf
	jne		end_while_2
true_while_2:
	fld 	@a
	fld 	@_1
	fadd
	fstp 	@Aux3
	fld 	@Aux3
	fstp 	@a
	fld 	@b
	fld 	@_1
	fadd
	fstp 	@Aux4
	fld 	@Aux4
	fstp 	@b
	jmp cond_while_2_1
end_while_2:
	displayFloat 	@a,3
	newLine 1
	displayFloat 	@b,3
	newLine 1
	displayString 	@_Fin_del_programa
	newLine 1
	mov ah, 4ch
	int 21h

;FIN DEL PROGRAMA DE USUARIO

strlen proc
	mov bx, 0
	strl01:
	cmp BYTE PTR [si+bx],'$'
	je strend
	inc bx
	jmp strl01
	strend:
	ret
strlen endp

copiar proc
	call strlen
	cmp bx , MAXTEXTSIZE
	jle copiarSizeOk
	mov bx , MAXTEXTSIZE
	copiarSizeOk:
	mov cx , bx
	cld
	rep movsb
	mov al , '$'
	mov byte ptr[di],al
	ret
copiar endp

concat proc
	push ds
	push si
	call strlen
	mov dx , bx
	mov si , di
	push es
	pop ds
	call strlen
	add di, bx
	add bx, dx
	cmp bx , MAXTEXTSIZE
	jg concatSizeMal
	concatSizeOk:
	mov cx , dx
	jmp concatSigo
	concatSizeMal:
	sub bx , MAXTEXTSIZE
	sub dx , bx
	mov cx , dx
	concatSigo:
	push ds
	pop es
	pop si
	pop ds
	cld
	rep movsb
	mov al , '$'
	mov byte ptr[di],al
	ret
concat endp

end