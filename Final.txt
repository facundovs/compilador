include macros2.asm
include number.asm

.MODEL LARGE
.STACK 200h
.386
.387
.DATA

	MAXTEXTSIZE equ 50
	@true equ 1
	@false equ 0
	@var1 	DD 0.0
	@var2 	DD 0.0
	@var3 	DD 0.0
	@varString1 	DB MAXTEXTSIZE dup (?),'$'
	@varString2 	DB MAXTEXTSIZE dup (?),'$'
	@varString3 	DB MAXTEXTSIZE dup (?),'$'
	@_Inicio_del_programa 	DB "Inicio del programa",'$',31 dup(?)
	@_0 	DD 0.0
	@_5 	DD 5.0
	@_3 	DD 3.0
	@_TRUE 	DB "TRUE",'$',46 dup(?)
	@_FALSE 	DB "FALSE",'$',45 dup(?)
	@_Fin_del_programa 	DB "Fin del programa",'$',34 dup(?)
	@Aux1 	DD 0.0
	@@filter 	DD 0.0
	@@allequal 	DD 0.0
	@null 	DD -1.0

.CODE
.startup
	mov AX,@DATA
	mov DS,AX

	FINIT

	displayString 	@_Inicio_del_programa
	newLine 1
	fld 	@_0
	fstp 	@var1
	fld 	@_5
	fstp 	@var2
	fld 	@_3
	fstp 	@var3
if_2:
	fld 	@var1
	fld 	@_3
	fadd
	fstp 	@Aux1
cond_if_2:
	fld 	@var3
	fld 	@Aux1
	fcomp
	fstsw	ax
	fwait
	sahf
	jne		else_if_2
	fld 	@true
	fstp 	@@allequal
	fld 	@false
	fstp 	@@allequal
end_if_2:
	displayString 	@_TRUE
	newLine 1
	jmp	 end_if_2
else_if_2:
	displayString 	@_FALSE
	newLine 1
end_if_1:
	displayString 	@_Fin_del_programa
	newLine 1
	mov ah, 4ch
	int 21h

;FIN DEL PROGRAMA DE USUARIO

strlen proc
	mov bx, 0
	strl01:
	cmp BYTE PTR [si+bx],'$'
	je strend
	inc bx
	jmp strl01
	strend:
	ret
strlen endp

copiar proc
	call strlen
	cmp bx , MAXTEXTSIZE
	jle copiarSizeOk
	mov bx , MAXTEXTSIZE
	copiarSizeOk:
	mov cx , bx
	cld
	rep movsb
	mov al , '$'
	mov byte ptr[di],al
	ret
copiar endp

concat proc
	push ds
	push si
	call strlen
	mov dx , bx
	mov si , di
	push es
	pop ds
	call strlen
	add di, bx
	add bx, dx
	cmp bx , MAXTEXTSIZE
	jg concatSizeMal
	concatSizeOk:
	mov cx , dx
	jmp concatSigo
	concatSizeMal:
	sub bx , MAXTEXTSIZE
	sub dx , bx
	mov cx , dx
	concatSigo:
	push ds
	pop es
	pop si
	pop ds
	cld
	rep movsb
	mov al , '$'
	mov byte ptr[di],al
	ret
concat endp

end